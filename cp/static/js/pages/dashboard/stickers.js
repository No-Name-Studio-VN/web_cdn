(()=>{let u="sticker",m=(window.AnimationHandler.Add("HorizontalMove"),0);var e=window.location.pathname.split("/");let w=`/dashboard/${e[2]}/`+e[3],v=$("#cardholder"),t=$("#download_all"),f=$("#itemsCount");let n=async e=>{let{id:n,name:a,format:t}=e,r=(e=>{switch(e){case 1:case 2:return"png";case 3:return"lottie";case 4:return"gif";default:return"png"}})(t),s="https://media.discordapp.net/stickers/"+`${n}.${r}?quality=lossless`;i=s;var i,e=await new Promise((e,t)=>{let n=new Image;n.src=i,n.onload=()=>e({image:n,width:n.naturalWidth,height:n.naturalHeight}),n.onerror=t}),o=document.createDocumentFragment();let l=document.createElement("div");l.classList.add("col-lg-2","col-md-3","col-4","mb-3",u+"-items"),l.setAttribute(u+"-id",a),l.innerHTML=`
    <span class="d-none cardNameTag">${a}</span>
    <div class="card card-hover overflow-hidden h-100">
      <div class="w-100 overflow-hidden position-relative text-center">
        <a href="${s}" target="_blank" data-pswp-width="${e.width}" data-pswp-height="${e.height}">
          <img src="${s}" class="d-block position-relative w-100" title="${a}" alt="${a}" filetype="${r}" loading="lazy" />
        </a>
      </div>

      <div class="p-1">
        <div class="w-100">
          <div class="row g-1">
            <div class="col-12">
              <input type="text" class="form-control fw-semibold fs-2 ${u}-name-edit" value="${a}"></input>
            </div>
            <div class="col-12">
              <div class="container-fluid p-0">
                <div class="row g-1">
                  <div class="col-6">
                    <button title="Download" class="btn btn-primary btn-sm w-100 ${u}-name-download" type="button" url="${s}" mediaType="${r}" fileName="${a}"><i class="ti ti-download"></i></button>
                  </div>
                  <div class="col-6">
                    <button title="Delete" class="btn btn-danger btn-sm w-100 ${u}-name-delete" type="button"><i class="ti ti-x"></i></button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    `,o.appendChild(l);var e=l.querySelector(`.${u}-name-download`),d=l.querySelector(`.${u}-name-delete`);let c=l.querySelector(`.${u}-name-edit`),p=l.querySelector(".cardNameTag");rxjs.fromEvent(e,"click").subscribe(e=>{g();{var t=s,o=a;r;let i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="blob",i.onload=function(e){var t=i.response,n=document.createElement("a"),t=window.URL.createObjectURL(t);n.href=t,n.download=o,n.click(),window.URL.revokeObjectURL(t)},i.send(),h()}}),rxjs.fromEvent(d,"click").subscribe(e=>{$.ajax({url:w+`/${n}/delete`,method:"POST",contentType:"application/json",success:function(e){l.remove(),m--,f.text(m),window.NotificationHandler.show({type:"success",content:e.data})},error:function(e){window.NotificationHandler.show({type:"error",content:e.responseJSON.error})}})}),rxjs.fromEvent(c,"keydown").subscribe(e=>{if("Enter"===e.key){let t=c.value;0<t.length&&t.length<33&&t!==a&&$.ajax({url:w+`/${n}/edit`,method:"POST",contentType:"application/json",data:JSON.stringify({id:n,name:t}),success:function(e){window.NotificationHandler.show({type:"success",content:e.data}),p.textContent=t},error:function(e){window.NotificationHandler.show({type:"error",content:e.responseJSON.error})}})}}),v.prepend(o)};$.get(w+"/fetch",function({data:e}){if(v.empty(),0<e?.length){m=e.length;for(var t of e)n(t)}let o=new PhotoSwipeLightbox({gallery:"#cardholder",children:"a",initialZoomLevel:"fit",secondaryZoomLevel:5,maxZoomLevel:10,pswpModule:PhotoSwipe});o.on("uiRegister",function(){o.pswp.ui.registerElement({name:"zoom-level-indicator",order:9,onInit:(t,n)=>{n.on("zoomPanUpdate",e=>{e.slide===n.currSlide&&(t.innerText="Zoom level is "+Math.round(100*n.currSlide.currZoomLevel)+"%")})}}),o.pswp.ui.registerElement({name:"custom-caption",order:9,isButton:!1,appendTo:"root",html:"Caption text",onInit:(i,e)=>{o.pswp.on("change",()=>{var e,t=o.pswp.currSlide.data.element;let n="";t&&(e=t.querySelector(".hidden-caption-content"),n=e?e.innerHTML:t.querySelector("img").getAttribute("alt")),i.innerHTML=n||""})}})}),o.init(),f.text(m)});e=$("#multiplefileupload");function g(){window.NotificationHandler.show({type:"info",content:i18next.t("dashboard.pages.stickers_emojis.download.generating",{type:i18next.t("dashboard.pages.sticker.title")})})}function h(){window.NotificationHandler.show({type:"success",content:i18next.t("dashboard.pages.stickers_emojis.download.completed",{type:i18next.t("dashboard.pages.sticker.title")})})}e.fileinput({language:getLang(),showPreview:!0,showUpload:!0,browseOnZoneClick:!0,layoutTemplates:{footer:'<div class="file-thumbnail-footer" style ="height:94px">\n  <input class="kv-input kv-new form-control input-sm form-control-sm text-center {TAG_CSS_NEW} file-name" value="{caption}" placeholder="Enter file name...">\n   <div class="small" style="margin:15px 0 2px 0">{size}</div> {progress}\n{indicator}\n{actions}\n</div>'},maxFileSize:512,elErrorContainer:"#kartik-file-errors",allowedFileExtensions:["apng","png","gif"],uploadUrl:w+"/upload",uploadExtraData:function(){return{name:$(".kv-input:visible.file-name").val()}}}),e.on("fileloaded",function(e,t,n,i,o,a){$(".kv-input:visible.file-name").val((t=(t=t.name).replace(/\.[^/.]+$/,"").replace(/[^a-zA-Z0-9_]/g,"")).length<2?u:t.slice(0,32))}),e.on("fileuploaded",function(e,t){t=t.response;t.success&&n(t.data)}),rxjs.fromEvent(t,"click").pipe(rxjs.tap(()=>window.ContentHandler.ToggleLoading(t,!0)),rxjs.debounceTime(1e3),rxjs.switchMap(async()=>{"function"!=typeof JSZip&&await LoadHandler.js(client.cdn+"/static/libs/jszip/index.min.js");let o=new JSZip,a=0;var e=$(`.${u}-name-download`);0!=e.length&&(g(),e.each(function(){var e=$(this),t=e.attr("url");let n=e.attr("fileName")+"."+e.attr("mediaType"),i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="blob",i.onload=e=>{var t;200==i.status&&(t=i.response,o.file(n,t),++a==m)&&o.generateAsync({type:"blob"}).then(async e=>{h(),"function"!=typeof saveAs&&await LoadHandler.js(client.cdn+"/static/libs/filesaver/index.js"),saveAs(e,u+".zip")})},i.send()}))}),rxjs.catchError(e=>(logger.error("Error downloading "+u,e),window.NotificationHandler.show({title:i18next.t("dashboard.pages.stickers_emojis.download.error.title",{type:i18next.t("dashboard.pages.sticker.title")}),content:e.message,type:"error"}),[])),rxjs.tap(()=>window.ContentHandler.ToggleLoading(t,!1))).subscribe()})();